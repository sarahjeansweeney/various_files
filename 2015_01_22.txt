# January 22, 2015
Picking up where we left off last week:

Communication:
* Meetings
* Who needs to communicate with who
* Who is responsible for documentation and where should the documentation live
* Project management/issue tracking

System Relationships
* Drupal and eXist: query and response. JSON? XML?
* Drupal and Hydra: ingestion and preservation. TEI Data

Team Responsibilities (Scott and Julia are represented at all levels)
* Drupal
 * Accounts
   * Ben, Linda, Eli
 * Upload/Configure/Projects
   * Eli, Will, Ben, Linda, Eli
 * Search/Browse
   * Eli, Ben, Linda, Eli
 * Reading Interface
   * Eli, Syd, Ben, Linda, Eli
 * System Admin
   * Karl
* Drupal --> Hydra, TEI Data transfer (put, push, or get?)
 * Ashley, Will, Syd, Sarah
* Hydra
 * Sarah, Will, David
 * System Admin
   * David
* Fedora
 * Sarah, Will, David
 * System Admin
   * David
* Hydra <--> eXist (query and response)
 * Ashley, Syd, Julia
* eXist
 * Ashley, Syd
 * System Admin
   * Karl
* Wild Apricot --> Drupal
 * Eliot, Linda
* Wild Apricot
 * John Unsworth
* Quality Assurance
 * TBD
* Documentation
 * User Facing: Need public facing rationals for our users (What kinds of TEI can I upload and why?)
   * Ben, with guidance from Ben and Scott
 * Development and General Project Documentation
   * Dependancies need to be well documented in GitHub. Need documentation for architectural pieces. i.e., How does Drupal do X? 
  * Technical documentation. Linda will take control of this, Ashley will co-own the responsibility
  * Where to look? Consult with Will and David on how best to document the development code.
* Feature Requests/Issue Tracking
 * TAPAS Generated
   * Git
     * As assigned (someone will need to handle unassigned issues)
 * User Generated
   * Triage
     * Ben (will get info from users, discussion lists, etc), Julia, ?
 * Decision
  * Whole team

Questions
* Linda: How do we communicate about how the dev server is being used? When is it save/unsafe to use?
Could be solved by server allocation, and redefining of current environments (test, development, and production)
* Linda: Is there a QA procedure to go from test to live?
 * Syd: No, except for common sense. We put out the word: Test this please.
 * Julia: Some testing does get done via beta testers. Now is a time to recruit beta testers for the kinds of QA we want (design issues, weird data). Commission a small group to integrate the plan.
 * Patrick: may integrate selenium (http://www.seleniumhq.org/): Run a test to make sure queries don't fail. Nagios is running to ping all our services, we should make sure Nagios is running for TAPAS.
 * Julia: Need to break this out as a work stream? Need a checklist of things that need to be tested. Brainstorm in another session, then select a point person to organize the future testing.
 * Syd: Develop a work suite of files, some that fail and some that succeed. Test the ability to create and delete users
* Sarah: What is Wild Apricot
 * Julia: Wild Apricot is storefront that TEI consortium uses to manage who has access via TEI membership (managed by John Unsworth; Eliot is most knowledgeable about how the API works to connect WA and Drupal)
* Linda: How do we prioritize feature requests?
 * Julia: Have a periodic meeting at intervals to look at current requests and prioritize them, so that Ben can communicate back to users what we plan to do. Create a core triage group.
 * Patrick: For the advisory board? May meet too infrequently for practical purposes.

Hydra Head will be packaged and made available

Future Meetings:
* Brain dumps on interfaces
* Bug/Feature Tracking (Set up the GitHub issues list to incorporate the details of this communication map. Milestones? Goals of the grant?)